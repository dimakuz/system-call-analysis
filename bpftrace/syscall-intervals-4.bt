BEGIN
{
    printf("tbegin,dur,sysnr,tid,ustack,comm\n");
    @start = nsecs;
    @stack_counter = 1;
}

tracepoint:raw_syscalls:sys_enter / comm == "postgres" || comm == "callgrind-amd64" /
{
    @enter_nsecs[tid] = nsecs;
}
tracepoint:raw_syscalls:sys_exit / comm == "postgres" || comm == "callgrind-amd64" /
{
    $enter_time = @enter_nsecs[tid];
    if ($enter_time != 0) {
        $stack_id = @ustacks[tid, ustack, args->id];
        if ($stack_id == 0) {
            $stack_id = @stack_counter;
            @stack_counter = @stack_counter + 1;
            @ustacks[tid, ustack, args->id] = $stack_id;
            printf("ustack: %d %d %d\n%s\nustackend\n", $stack_id, tid, args->id, ustack(perf));
            printf("\n\n\n");
        }
        printf("i:%llx,%llx,%x,%x,%x,%s\n",$enter_time - @start, nsecs - $enter_time, args->id, tid, $stack_id,comm);
    }
}

END {
    printf("==== END =========\n");
    clear(@enter_nsecs);
    clear(@start);
    clear(@stack_counter);
    clear(@ustacks);
    // clear(@ustacks);
}
